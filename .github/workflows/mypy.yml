name: mypy
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - '**/*.py'
      - '**/*.rs'
      - 'mypy.ini'
  merge_group:  # Needed for required workflows
  # Run after a review has been submitted (this is a required workflow which
  # might not be triggered when no code changes -- trigger before going to
  # merge queue).
  pull_request_review:
    types: [submitted]

jobs:
  mypy:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python 3.10
        uses: actions/setup-python@v6
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: Get pip cache directory
        id: pip-cache
        shell: bash
        run: |
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
      - name: Use cached venv or create it
        uses: actions/cache/restore@v4
        id: cache
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          # The cache key depends on requirements file.
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/dev_Linux_*_requirements.txt') }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Find out Python version
        run: echo "PY_VERSION=$(python3 tools/get_min_required_version.py)" >> $GITHUB_ENV
      # Build a virtualenv, but only if it doesn't already exist
      - name: Populate pip cache
        run: |
          pip install --require-hashes --no-deps -r "requirements/dev_Linux_py3.${env.PY_VERSION}_requirements.txt"
          pip install --editable ".[dev]"
      - name: Save cache
        id: cache-save
        uses: actions/cache/save@v4
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ steps.cache.outputs.cache-primary-key }}
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Register matcher
        run: echo ::add-matcher::./.github/python_matcher.json
      - name: Running mypy
        run: |
          echo "PYTHONPATH=./src:$PYTHONPATH" >> $GITHUB_ENV
          mkdir -p .mypy_cache
          mypy --version
          mypy --no-color-output --install-types --non-interactive src docs
