# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# automatically generated by the FlatBuffers compiler, do not modify

# namespace: shardfile

# pylint: skip-file

import flatbuffers  # type: ignore
from flatbuffers.compat import import_numpy  # type: ignore

np = import_numpy()


class Shard(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Shard()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsShard(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)

    # Shard
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Shard
    def Examples(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from sedpack.io.flatbuffer.shardfile.Example import Example
            obj = Example()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Shard
    def ExamplesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # Shard
    def ExamplesIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0


def ShardStart(builder):
    builder.StartObject(1)


def Start(builder):
    ShardStart(builder)


def ShardAddExamples(builder, examples):
    builder.PrependUOffsetTRelativeSlot(
        0, flatbuffers.number_types.UOffsetTFlags.py_type(examples), 0)


def AddExamples(builder, examples):
    ShardAddExamples(builder, examples)


def ShardStartExamplesVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)


def StartExamplesVector(builder, numElems):
    return ShardStartExamplesVector(builder, numElems)


def ShardEnd(builder):
    return builder.EndObject()


def End(builder):
    return ShardEnd(builder)
